{"version":3,"file":"component---src-pages-work-weekly-tsx-e7890391641bf6d9871a.js","mappings":"sLAyBA,IAbmCA,IAAyC,IAAxC,QAAEC,EAAO,YAAEC,EAAW,SAAEC,GAAUH,EACpE,OACEI,EAAAA,cAACC,EAAAA,EAAK,KACJD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAON,EAASC,YAAaA,EAAaM,IAAK,IAAMP,EAAQQ,gBAClEL,EAAAA,cAACM,EAAAA,EAAS,CAACC,GAAI,OAAQC,eAAa,GAClCR,EAAAA,cAACS,EAAAA,EAAO,CAACC,GAAI,MAAOb,GACnBC,GAAeE,EAAAA,cAACW,EAAAA,EAAI,KAAEb,IAEzBE,EAAAA,cAACM,EAAAA,EAAS,CAACM,EAAG,QAASJ,eAAa,GAAET,GAChC,C,kHCmCZ,UAlCiDH,IAAc,IAAb,KAAEiB,GAAMjB,EACpDkB,EAAsB,GAY1B,OAVAD,EAAKE,OAAOC,MAAMC,KAAI,CAACC,EAAMC,KAAM,IAAAC,EAAAC,EAAAC,EACjC,MAAMC,GAAIC,EAAAA,EAAAA,GAAW,IAAIC,MAA0B,QAArBL,EAAAF,EAAKQ,KAAKC,mBAAW,IAAAP,OAAA,EAArBA,EAAuBQ,OAAQ,KAE7Dd,EAAYe,KAAK,CACf1B,OAA4B,QAArBkB,EAAAH,EAAKQ,KAAKC,mBAAW,IAAAN,OAAA,EAArBA,EAAuBlB,QAAS,GACvC2B,MAA2B,QAArBR,EAAAJ,EAAKQ,KAAKC,mBAAW,IAAAL,OAAA,EAArBA,EAAuBQ,OAAQ,GACrCF,KAAML,GACN,IAIFvB,EAAAA,cAAC+B,EAAAA,EAAG,CACFlC,QAAS,SACTC,YAAa,2CAEbE,EAAAA,cAACM,EAAAA,EAAS,CAAC0B,GAAI,QACZlB,EAAYG,KAAI,CAACC,EAAMe,IACtBjC,EAAAA,cAACkC,EAAAA,GAAG,CAACF,GAAI,OAAQG,IAAKF,GACpBjC,EAAAA,cAACoC,EAAAA,KAAI,CAACC,GAAI,SAAWnB,EAAKY,MACxB9B,EAAAA,cAACsC,EAAAA,EAAI,CAACC,eAAgB,iBACpBvC,EAAAA,cAACW,EAAAA,EAAI,CAAC6B,KAAM,QAAStB,EAAKf,OAC1BH,EAAAA,cAACW,EAAAA,EAAI,KAAEO,EAAKU,YAMlB,C,uDCpDH,MAAMJ,EAAcD,GACX,CACZ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAI0BA,EAAEkB,YAAW,IAAIlB,EAAEmB,UAAUC,WAAU,KAAKpB,EAAEqB,a,yFCTxEN,GAAO,QAAW,SAAeO,EAAOC,GAC1C,MAAM,UAAEC,EAAS,MAAEC,EAAK,QAAEC,EAAO,KAAEC,EAAI,MAAEC,EAAK,KAAEC,EAAI,OAAEC,KAAWC,GAAST,EACpEU,EAAS,CACbC,QAAS,OACTC,cAAeV,EACfW,WAAYV,EACZT,eAAgBU,EAChBU,SAAUT,EACVU,UAAWT,EACXU,SAAUT,EACVU,WAAYT,GAEd,OAAuB,IAAAU,KAAI,IAAOC,IAAK,CAAElB,MAAKmB,MAAOV,KAAWD,GAClE,IACAhB,EAAK4B,YAAc,M","sources":["webpack://fake-programmer/./src/layout/tab.tsx","webpack://fake-programmer/./src/pages/work/weekly.tsx","webpack://fake-programmer/./src/util/format.ts","webpack://fake-programmer/./node_modules/@chakra-ui/layout/dist/chunk-KRPLQIP4.mjs"],"sourcesContent":["import React from \"react\";\n\nimport Basic from \"./basic\";\nimport { Container, Heading, Text } from \"@chakra-ui/react\";\nimport Seo from \"./seo\";\n\ntype LayoutProps = {\n  tabName: string;\n  description?: string;\n  children: React.ReactNode | React.ReactNode[];\n};\n\nconst Tab: React.FC<LayoutProps> = ({ tabName, description, children }) => {\n  return (\n    <Basic>\n      <Seo title={tabName} description={description} url={\"/\" + tabName.toLowerCase()}/>\n      <Container pt={\"50px\"} centerContent>\n        <Heading as={\"h2\"}>{tabName}</Heading>\n        {description && <Text>{description}</Text>}\n      </Container>\n      <Container w={\"100vw\"} centerContent>{children}</Container>\n    </Basic>\n  );\n};\n\nexport default Tab;\n","import React from \"react\";\n\nimport Tab from \"../../layout/tab\";\n\nimport { Box, Container, Flex, Text } from \"@chakra-ui/react\";\nimport { Link, PageProps, graphql } from \"gatsby\";\nimport { FormatDate } from \"../../util/format\";\n\ntype AllMDXQuery = {\n  allMdx: {\n    edges: {\n      node: Queries.Mdx;\n    }[];\n  };\n};\n\ntype Info = {\n  title: string;\n  slug: string;\n  date: string;\n};\n\nconst Weekly: React.FC<PageProps<AllMDXQuery>> = ({ data }) => {\n  let displayList: Info[] = [];\n\n  data.allMdx.edges.map((post, _) => {\n    const d = FormatDate(new Date(post.node.frontmatter?.date || \"\"));\n\n    displayList.push({\n      title: post.node.frontmatter?.title || \"\",\n      slug: post.node.frontmatter?.slug || \"\",\n      date: d,\n    });\n  });\n\n  return (\n    <Tab\n      tabName={\"Weekly\"}\n      description={\"sleep(); poop(); work(); eat(); game();\"}\n    >\n      <Container mt={\"70px\"}>\n        {displayList.map((post, idx) => (\n          <Box mt={\"20px\"} key={idx}>\n            <Link to={\"/post/\" + post.slug}>\n              <Flex justifyContent={\"space-between\"}>\n                <Text size={\"17px\"}>{post.title}</Text>\n                <Text>{post.date}</Text>\n              </Flex>\n            </Link>\n          </Box>\n        ))}\n      </Container>\n    </Tab>\n  );\n};\n\nexport default Weekly;\n\nexport const query = graphql`\n  {\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [\"Weekly\"] }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            description\n            slug\n          }\n          id\n        }\n      }\n    }\n  }\n`;\n","export const FormatDate = (d: Date): string => {\n  const month = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  // prettier-ignore\n  const dateFormat = `${month[d.getMonth()]} ${d.getDate().toString()}, ${d.getFullYear()}`;\n\n  return dateFormat;\n};\n","'use client'\n\n// src/flex.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nFlex.displayName = \"Flex\";\n\nexport {\n  Flex\n};\n//# sourceMappingURL=chunk-KRPLQIP4.mjs.map"],"names":["_ref","tabName","description","children","React","Basic","Seo","title","url","toLowerCase","Container","pt","centerContent","Heading","as","Text","w","data","displayList","allMdx","edges","map","post","_","_post$node$frontmatte","_post$node$frontmatte2","_post$node$frontmatte3","d","FormatDate","Date","node","frontmatter","date","push","slug","Tab","mt","idx","Box","key","Link","to","Flex","justifyContent","size","getMonth","getDate","toString","getFullYear","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","styles","display","flexDirection","alignItems","flexWrap","flexBasis","flexGrow","flexShrink","jsx","div","__css","displayName"],"sourceRoot":""}