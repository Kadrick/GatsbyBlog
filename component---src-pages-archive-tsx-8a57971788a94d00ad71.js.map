{"version":3,"file":"component---src-pages-archive-tsx-8a57971788a94d00ad71.js","mappings":"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","sources":["webpack://fake-programmer/./src/layout/tab.tsx","webpack://fake-programmer/./src/pages/archive.tsx","webpack://fake-programmer/./node_modules/@chakra-ui/layout/dist/chunk-KRPLQIP4.mjs"],"sourcesContent":["import React from \"react\";\n\nimport Basic from \"./basic\";\nimport { Container, Heading, Text } from \"@chakra-ui/react\";\nimport Seo from \"./seo\";\n\ntype LayoutProps = {\n  tabName: string;\n  description?: string;\n  children: React.ReactNode | React.ReactNode[];\n};\n\nconst Tab: React.FC<LayoutProps> = ({ tabName, description, children }) => {\n  return (\n    <Basic>\n      <Seo title={tabName} description={description} url={\"/\" + tabName.toLowerCase()}/>\n      <Container pt={\"50px\"} centerContent>\n        <Heading as={\"h2\"}>{tabName}</Heading>\n        {description && <Text>{description}</Text>}\n      </Container>\n      <Container w={\"100vw\"} centerContent>{children}</Container>\n    </Basic>\n  );\n};\n\nexport default Tab;\n","import React from \"react\";\n\nimport { Link, PageProps, graphql } from \"gatsby\";\n\nimport { Box, Container, Flex, Heading, Text } from \"@chakra-ui/react\";\nimport Tab from \"../layout/tab\";\n\ntype AllMDXQuery = {\n  allMdx: {\n    edges: {\n      node: Queries.Mdx;\n    }[];\n  };\n};\n\ntype Info = {\n  title: string;\n  slug: string;\n  date: string;\n};\n\nconst Archive: React.FC<PageProps<AllMDXQuery>> = ({ data }) => {\n  let displayTarget = new Map<number, Info[]>();\n\n  data.allMdx.edges.map((post, idx) => {\n    const dateString = post.node.frontmatter?.date as string;\n\n    if (dateString === null || dateString === \"\") {\n      const info = {\n        title: post.node.frontmatter?.title || Math.random().toString(),\n        date: \"\",\n        slug: post.node.frontmatter?.slug || Math.random().toString(),\n      };\n\n      if (!displayTarget.has(0)) {\n        displayTarget.set(0, []);\n      }\n\n      const prevData = displayTarget.get(0);\n      prevData?.push(info);\n\n      return;\n    }\n\n    const postDate = new Date(dateString);\n\n    if (!displayTarget.has(postDate.getFullYear())) {\n      displayTarget.set(postDate.getFullYear(), []);\n    }\n\n    const month = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    // prettier-ignore\n    const dateFormat = `${month[postDate.getMonth()]} ${postDate.getDate().toString()}, ${postDate.getFullYear()}`;\n\n    const prevData = displayTarget.get(postDate.getFullYear());\n    prevData?.push({\n      title: post.node.frontmatter?.title || Math.random().toString(),\n      date: dateFormat,\n      slug: post.node.frontmatter?.slug || Math.random().toString(),\n    });\n  });\n\n  return (\n    <Tab\n      tabName={\"Archive\"}\n      description={\"원숭이가 셰익스피어의 희곡을 칠 확률\"}\n    >\n      <Container>\n        {[...displayTarget.entries()].map((yearSet, key) => {\n          if (yearSet[0] !== 0) {\n            return (\n              <Box mt={\"70px\"} key={key}>\n                <Heading>{yearSet[0]}</Heading>\n                {yearSet[1].map((info, key) => (\n                  <Box mt={\"20px\"} key={key}>\n                    <Link to={\"/post/\" + info.slug}>\n                      <Flex justifyContent={\"space-between\"}>\n                        <Text size={\"17px\"}>{info.title}</Text>\n                        <Text>{info.date}</Text>\n                      </Flex>\n                    </Link>\n                  </Box>\n                ))}\n              </Box>\n            );\n          }\n        })}\n\n        {displayTarget.has(0) && (\n          <Box w={\"100%\"} mt={\"70px\"}>\n            <Heading>Unknown</Heading>\n            {displayTarget.get(0)?.map((info, key) => (\n              <Box mt={\"20px\"} key={key}>\n                <Link to={\"/post/\" + info.slug}>\n                  <Flex>\n                    <Text w={\"500px\"} size={\"17px\"}>\n                      {info.title}\n                    </Text>\n                  </Flex>\n                </Link>\n              </Box>\n            ))}\n          </Box>\n        )}\n      </Container>\n    </Tab>\n  );\n};\n\nexport default Archive;\n\nexport const query = graphql`\n  {\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date\n            description\n            slug\n          }\n          id\n        }\n      }\n    }\n  }\n`;\n","'use client'\n\n// src/flex.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nFlex.displayName = \"Flex\";\n\nexport {\n  Flex\n};\n//# sourceMappingURL=chunk-KRPLQIP4.mjs.map"],"names":["_ref","tabName","description","children","React","Basic","Seo","title","url","toLowerCase","Container","pt","centerContent","Heading","as","Text","w","_displayTarget$get","data","displayTarget","Map","allMdx","edges","map","post","idx","_post$node$frontmatte","_post$node$frontmatte4","_post$node$frontmatte5","dateString","node","frontmatter","date","_post$node$frontmatte2","_post$node$frontmatte3","info","Math","random","toString","slug","has","set","prevData","get","push","postDate","Date","getFullYear","dateFormat","getMonth","getDate","Tab","_toConsumableArray","entries","yearSet","key","Box","mt","Link","to","Flex","justifyContent","size","props","ref","direction","align","justify","wrap","basis","grow","shrink","rest","styles","display","flexDirection","alignItems","flexWrap","flexBasis","flexGrow","flexShrink","jsx","div","__css","displayName"],"sourceRoot":""}